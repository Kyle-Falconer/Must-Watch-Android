buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // Keep this updated to the latest version:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.24.1'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}



android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    signingConfigs {
        release {
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    testOptions {
        unitTests.all {
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }
        }
    }

    defaultConfig {
        applicationId "com.fullmeadalchemist.mustwatch"

        minSdkVersion 14
        targetSdkVersion 26

        versionCode 2
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }
    dataBinding {
        enabled = true
    }
    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries true
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    aaptOptions {
        cruncherEnabled = true
    }
    flavorDimensions "default"
    productFlavors {
        beta {
            versionNameSuffix '-beta'
            applicationIdSuffix ".beta"
            dimension "default"
        }
        prod {
            dimension "default"
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            pseudoLocalesEnabled true
        }
        release {
            minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), "proguard-rules.pro"
            signingConfig signingConfigs.release

            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            zipAlignEnabled true
        }
    }
}



dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$support_version"
    compile "com.android.support:design:$support_version"
    compile "com.android.support:appcompat-v7:$support_version"
    compile "com.android.support:recyclerview-v7:$support_version"
    compile "com.android.support:cardview-v7:$support_version"
    compile "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    compile "android.arch.lifecycle:runtime:$arch_version"
    compile "android.arch.lifecycle:extensions:$arch_version"
    compile "android.arch.persistence.room:runtime:$arch_version"
    compile "android.arch.persistence.room:rxjava2:$arch_version"
    compile 'javax.inject:javax.inject:1'
    compile 'javax.annotation:javax.annotation-api:1.2'
    compile "com.github.bumptech.glide:glide:$glide_version"
    compile 'com.google.code.gson:gson:2.8.1'

    //
    // UNITS OF MEASUREMENT (JSR 363)
    // https://github.com/unitsofmeasurement/unit-api
    // https://github.com/unitsofmeasurement/uom-systems/tree/master/common
    compile 'javax.measure:unit-api:1.0'
    compile 'systems.uom:systems-common:0.7.1'
    compile 'systems.uom:systems-quantity:0.7.1'

    //
    // RxAndroid
    // https://github.com/ReactiveX/RxAndroid
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'

    //
    // Dagger
    // https://google.github.io/dagger/
    compile "com.google.dagger:dagger:$dagger_version"
    compile "com.google.dagger:dagger-android:$dagger_version"
    compile "com.google.dagger:dagger-android-support:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    annotationProcessor "android.arch.lifecycle:compiler:$arch_version"
    annotationProcessor "android.arch.persistence.room:compiler:$arch_version"

    //
    // DEBUG ONLY
    //
    // http://facebook.github.io/stetho/
    compile 'com.facebook.stetho:stetho:1.5.0'
    //
    // https://github.com/JakeWharton/timber
    compile 'com.jakewharton.timber:timber:4.5.1'


    testCompile "android.arch.persistence.room:testing:$arch_version"
    testCompile "junit:junit:$junit_version"
    androidTestCompile 'com.android.support.test:runner:1.0.1'
    androidTestCompile 'com.android.support.test:rules:1.0.1'

    // Espresso dependencies
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espresso_version"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$espresso_version"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$espresso_version"
    androidTestCompile "com.android.support.test.espresso:espresso-accessibility:$espresso_version"
    androidTestCompile "com.android.support.test.espresso:espresso-web:$espresso_version"
    androidTestCompile "com.android.support.test.espresso.idling:idling-concurrent:$espresso_version"
    androidTestCompile "com.android.support.test.espresso:espresso-idling-resource:$espresso_version"
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }
}

// https://www.thoughtworks.com/insights/blog/signing-open-source-android-apps-without-disclosing-passwords
def props = new Properties()
props.load(new FileInputStream(rootProject.file("release.properties")))
android.signingConfigs.release.storeFile rootProject.file(props.keyStore)
android.signingConfigs.release.storePassword props.keyStorePassword
android.signingConfigs.release.keyAlias props.keyAlias
android.signingConfigs.release.keyPassword props.keyAliasPassword
